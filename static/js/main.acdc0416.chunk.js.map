{"version":3,"sources":["BooksAPI.js","Book.js","SeachView.js","BookShelf.js","ShelfView.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","props","thumbnail","noCover","imageLinks","react_default","a","createElement","className","key","style","width","height","backgroundImage","value","onChange","event","onChangeShelf","target","disabled","title","authors","SeachView","state","result","updateQuery","_this","setState","trim","BooksAPI","map","push","catch","changeShelf","_this2","this","booksInShelf","Link","to","type","placeholder","length","b","bookInShelf","filter","bis","src_Book","Component","BookShelf","shelfTitle","ShelfView","src_BookShelf","currentlyReading","wantToRead","read","onClick","onSearchClick","BooksApp","newState","movingBook","updateShelves","forEach","_this3","toConsumableArray","Route","exact","path","render","_ref","history","src_ShelfView","src_SeachView","React","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.acdc0416.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\n\r\nfunction Book(props) {\r\n\tconst book = props.book\r\n\tlet shelf = 'none',\r\n\t\tthumbnail = '',\r\n\t\tnoCover = ''\r\n\tif(book.shelf){\r\n\t\tshelf = book.shelf\r\n\t}\r\n\tif(book.imageLinks){\r\n\t\tthumbnail = book.imageLinks.thumbnail\r\n\t} else {\r\n\t\tnoCover = <p className='no-cover-thumbnail'>Image is not available.</p>\r\n\t}\r\n\r\n\treturn (\t\t\t\t\t\t\r\n\t\t<li key={book.id}>\r\n\t\t\t<div className=\"book\">\r\n\t\t\t\t<div className=\"book-top\">\r\n\t\t\t\t\t<div className=\"book-cover\" style={\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\twidth: 128, height: 193, \r\n\t\t\t\t\t\t\tbackgroundImage: `url(${thumbnail})`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}>{noCover}</div>\r\n\t\t\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t\t\t<select value={shelf} \r\n\t\t\t\t\t\t\tonChange={(event) => props.onChangeShelf(book, event.target.value)}>\r\n\r\n\t\t\t\t\t\t\t<option value=\"move\" disabled>Move to...</option>\r\n\t\t\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\r\n\t\t\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\r\n\t\t\t\t\t\t\t<option value=\"read\">Read</option>\r\n\t\t\t\t\t\t\t<option value=\"none\">None</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t    <div className=\"book-title\">{book.title}</div>\r\n\t\t\t    <div className=\"book-authors\">{book.authors}</div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Book","import React, {Component} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from './Book'\r\n\r\nclass SeachView extends Component{\r\n\tstate = {\r\n\t\tquery: '',\r\n\t\tresult: []\r\n\t}\r\n\r\n\tupdateQuery = (query) => {\r\n\t\tthis.setState({ query: query.trim() })\r\n\t\tif(query){\r\n\t\t\tconst result = []\r\n\t\t\tBooksAPI.search(query).then((books) => {\r\n\t\t\t\tbooks.map(\r\n\t\t\t\t\tbook => result.push(book)\r\n\t\t\t\t)\r\n\t\t\t\tthis.setState({result})\r\n\t\t\t}).catch(() => this.setState({result: []}))\r\n\t\t}else{\r\n\t\t\tthis.setState({result: []})\r\n\t\t}\r\n\t}\r\n\r\n\tchangeShelf = (book, shelf) => {\r\n\t\tBooksAPI.update(book,shelf)\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst booksInShelf = this.props.booksInShelf\r\n\t\treturn (\r\n\t\t\t<div className=\"search-books\">\r\n\t            <div className=\"search-books-bar\">\r\n\t            <Link to='/' className='close-search'>Close</Link>\r\n\t            \t<div className=\"search-books-input-wrapper\">\r\n\t\t                <input type=\"text\" \r\n\t\t                \tplaceholder=\"Search by title or author\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.updateQuery(event.target.value)}/>\r\n\r\n\t            \t</div>\r\n\t            </div>\r\n\t            <div className=\"search-books-results\">\r\n\t              \t{ !this.state.query ? (<div className='empty-result'><p>Empty search</p></div>) \r\n\t              \t: this.state.result.length > 0 ? (\r\n\t            \t\t<ol className=\"books-grid\">{\r\n\t\t\t              \tthis.state.result.map((b) => {\r\n\t\t\t              \t\tconst book = b\r\n\t\t\t              \t\tconst bookInShelf = booksInShelf.filter((bis) => bis.id === book.id)\r\n\t\t\t              \t\tlet shelf = 'none'\r\n\t\t\t              \t\tif(bookInShelf[0]){\r\n\t\t\t              \t\t\tshelf = bookInShelf[0].shelf\r\n\t\t\t              \t\t}\r\n\t\t\t              \t\tbook.shelf = shelf\r\n\t\t\t              \t\treturn (\r\n\t\t\t              \t\t\t<Book book={book}\r\n\t\t\t\t\t\t\t\t\tkey={book.id}\r\n\t\t\t\t\t\t\t\t\tonChangeShelf={this.changeShelf}/>)\r\n\t\t\t              \t})\r\n\t\t              \t}</ol>\r\n\t              \t) : (<div className='empty-result'><p>No results found!</p></div>)}\r\n\t            \t\r\n\t            </div>\r\n        \t</div>\r\n        )\r\n\t}\r\n}\r\n\r\nexport default SeachView","import React from 'react'\r\nimport Book from './Book'\r\n\r\nfunction BookShelf(props) {\r\n\treturn (\r\n\t\t<div className=\"bookshelf\">\r\n\t        <h2 className=\"bookshelf-title\">{props.shelfTitle} ({props.books.length})</h2>\r\n\t        <div className=\"bookshelf-books\">\r\n\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t{props.books.map((book) => (\r\n\t\t\t\t\t\t<Book book={book}\r\n\t\t\t\t\t\t\tkey={book.id}\r\n\t\t\t\t\t\t\tonChangeShelf={props.onChangeShelf}/>\r\n\t\t\t\t\t))}\r\n\t            </ol>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BookShelf","import React from 'react'\r\nimport BookShelf from './BookShelf'\r\n\r\nfunction ShelfView(props) {\r\n\treturn (\r\n\t\t<div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                <BookShelf books={props.currentlyReading} \r\n                  shelfTitle='Currently Reading' \r\n                  onChangeShelf={props.changeShelf}/>\r\n\r\n                <BookShelf books={props.wantToRead} \r\n                  shelfTitle='Want to Read' \r\n                  onChangeShelf={props.changeShelf}/>\r\n\r\n                <BookShelf books={props.read} \r\n                  shelfTitle='Read' \r\n                  onChangeShelf={props.changeShelf}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"open-search\">\r\n              <button onClick={props.onSearchClick}>Add a book</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShelfView","import React from 'react'\r\nimport './App.css'\r\nimport SeachView from './SeachView'\r\nimport ShelfView from './ShelfView'\r\nimport { Route } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        currentlyReading: [],\r\n        wantToRead: [],\r\n        read: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateShelves()\r\n    }\r\n\r\n    updateShelves() {\r\n        BooksAPI.getAll().then((books) => {\r\n            const newState = this.state\r\n            books.forEach((book) => { newState[book.shelf].push(book) })\r\n            this.setState(newState)\r\n        })\r\n    }\r\n\r\n    changeShelf = (book, shelf) => {\r\n        const newState = this.state\r\n        const movingBook = book\r\n\r\n        if (book.shelf !== shelf) {\r\n            newState[book.shelf] = newState[book.shelf].filter(b => b.id !== book.id)\r\n            if (shelf !== 'none') {\r\n                movingBook.shelf = shelf\r\n                newState[shelf].push(movingBook)\r\n            }\r\n        }\r\n        this.setState(newState)\r\n        BooksAPI.update(book, shelf)\r\n    }\r\n\r\n  render() {\r\n    const shelf = this.state,\r\n          books = [...shelf.currentlyReading, ...shelf.wantToRead, ...shelf.read]\r\n    return (\r\n      <div className=\"app\">\r\n\r\n        <Route exact path={'/'} render={({history}) => (\r\n          <ShelfView \r\n            currentlyReading={this.state.currentlyReading}\r\n            wantToRead={this.state.wantToRead}\r\n            read={this.state.read}\r\n            changeShelf={this.changeShelf}\r\n            onSearchClick={() => history.push('/search')}\r\n            />\r\n        )}/>\r\n\r\n        <Route exact path={'/search'} render={() => (\r\n          <SeachView booksInShelf={books}/>\r\n        )}/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BooksApp","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}